library(lubridate)
colNino <- read.delim("https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/tao-all2.col")
ElNino = read.delim("tao-all2.dat",  header=FALSE,  sep=" ", na.strings = c("."))
colnames(ElNino) = c("obs", "year", "month","day","date", "latitude","longitude","zon.winds","mer.winds","humidity","air temp.","s.s.temp.")
write.csv(ElNino, "df.csv")
data = ElNino
# Validate the data
for (i in 1:nrow(data)) {
if (!is.integer(data[i,1]) || !is.integer(data[i,2]) || !is.integer(data[i,3]) ||
!is.integer(data[i,4]) || !is.integer(data[i,5]) || !is.numeric(data[i,6]) ||
!is.numeric(data[i,7]) || !is.numeric(data[i,8]) || !is.numeric(data[i,9]) ||
!is.numeric(data[i,10]) || !is.numeric(data[i,11])) {
print(paste("Error: Invalid value in row", i))
}
}
# Check that the date values match the year, month, and day values
for (i in 1:nrow(data)) {
if (data[i,5] != as.integer(paste(data[i,2], data[i,3], data[i,4], sep=""))) {
print(paste("Error: Mismatch in date values in row", i))
}
}
library(ggplot2)
# Create a scatter plot of sea surface temperature vs. zonal wind speed
ggplot(ElNino, aes(x = Sea.Surface.Temperature, y = Zonal.Winds)) +
geom_point()
ElNino
library(ggplot2)
# Create a scatter plot of sea surface temperature vs. zonal wind speed
ggplot(ElNino, aes(x = Sea.Surface.Temperature, y = Zonal.Winds)) +
geom_point()
ElNino
library(ggplot2)
# Create a scatter plot of sea surface temperature vs. zonal wind speed
ggplot(ElNino, aes(x = s.s.temp, y = zon.winds)) +
geom_point()
ElNino
library(ggplot2)
# Create a scatter plot of sea surface temperature vs. zonal wind speed
ggplot(ElNino, aes(x = s.s.temp., y = zon.winds)) +
geom_point()
# Convert the month column to a factor
ElNino$month <- as.factor(ElNino$month)
# Create a line plot of month vs. sea surface temperature
ggplot(ElNino, aes(x = month, y = s.s.temp.)) +
geom_line()
ElNino = na.omit(ElNino)
library(ggplot2)
# Create a scatter plot of sea surface temperature vs. zonal wind speed
ggplot(ElNino, aes(x = s.s.temp., y = zon.winds)) +
geom_point()
ElNino = na.omit(ElNino)
ElNino
library(ggplot2)
# Create a scatter plot of sea surface temperature vs. zonal wind speed
ggplot(ElNino, aes(x = s.s.temp., y = zon.winds)) +
geom_point()
# Descriptive statistics of Zonal.Winds:
ggplot(ElNino,aes(y=ElNino$zon.winds)) +
geom_boxplot(color="lightblue", notch=TRUE, fill="azure", outlier.color="red", outlier.shape=20,outlier.size=4) +
ylab("Zonal.Winds") +
scale_x_discrete() +
ggtitle("Boxplot of Zonal.Winds")
ggplot(ElNino,aes(x=zon.winds,y=s.s.temp.)) +
geom_point(color = "blue") +
xlab("Zonal.Winds") +
ylab("Sea.Surface.Temp") +
ggtitle("Scatterplot of Zonal.Winds") +
geom_smooth(method = "lm",color = "red") +
geom_smooth(color = "orange")
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(ElNino)
str(ElNino)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(ElNino)
str(ElNino)
ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(ElNino)
cor_matrix
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(ElNino)
cor_matrix
library(corrplot)
install.packages("corrplot")
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(ElNino)
cor_matrix
library(corrplot)
# Create a visual representation of the correlations in the data
corrplot(cor_matrix, method = "square")
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(select(ElNino, -Obs))
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(select(ElNino, -obs))
cor_matrix
library(corrplot)
# Create a visual representation of the correlations in the data
corrplot(cor_matrix, method = "square")
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(select(ElNino, -obs))
cor_matrix
library(corrplot)
# Create a visual representation of the correlations in the data
corrplot(cor_matrix, method = "color")
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(select(ElNino, -obs))
cor_matrix
library(corrplot)
# Create a visual representation of the correlations in the data
corrplot(cor_matrix, method = "color", colorbar = TRUE, col = colorRampPalette(c("blue", "red"))(100))
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(select(ElNino, -obs))
cor_matrix
library(corrplot)
# Create a visual representation of the correlations in the data
corrplot(cor_matrix, method = "number")
#str(ElNino)
#ElNino$month <- as.numeric(ElNino$month)
# Load the dplyr library
library(dplyr)
library(corrplot)
# Calculate the pairwise correlations between all columns of the data frame
cor_matrix <- cor(select(ElNino, -obs))
# Create a visual representation of the correlations in the data
corrplot(cor_matrix, method = "number")
